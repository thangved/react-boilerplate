name: Docker

on:
    schedule:
        - cron: "18 3 * * *"
    push:
        branches: ["main"]
        tags: ["v*.*.*"]
    pull_request:
        branches: ["main"]
    workflow_dispatch:

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}
    DOCKER_USERNAME: ${{ github.actor }}
    DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

jobs:
    build:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
            id-token: write

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Install cosign
              if: github.event_name != 'pull_request'
              uses: sigstore/cosign-installer@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log into registry ${{ env.REGISTRY }}
              if: github.event_name != 'pull_request'
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ env.DOCKER_USERNAME }}
                  password: ${{ env.DOCKER_PASSWORD }}

            - name: Extract Docker metadata
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
                  tags: |
                      type=ref,event=branch
                      type=ref,event=pr
                      type=semver,pattern={{version}}
                      type=semver,pattern={{major}}.{{minor}}

            - name: Build and push Docker image
              id: build-and-push
              uses: docker/build-push-action@v6
              with:
                  context: .
                  push: ${{ github.event_name != 'pull_request' }}
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }},mode=max
                  cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }},mode=max

            - name: Sign the published Docker image
              if: ${{ github.event_name != 'pull_request' }}
              env:
                  TAGS: ${{ steps.meta.outputs.tags }}
                  DIGEST: ${{ steps.build-and-push.outputs.digest }}
              run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
